---
import "@/styles/globals.css";

interface Props {
	title: string;
}
const { title } = Astro.props;
---

<script is:inline>
	if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
	  console.log('localStorage.getItem("theme")', localStorage.getItem('theme'));
	  const isDark = localStorage.getItem('theme') === 'dark';
	  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
	}
  
	if (typeof localStorage !== 'undefined') {
	  const observer = new MutationObserver(() => {
		const isDark = document.documentElement.classList.contains('dark');
		localStorage.setItem('theme', isDark ? 'dark' : 'light');
	  });
	  observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>  

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>VitalityVibe - {title}</title>
	</head>
	<body>
        <slot />
    </body>
</html>